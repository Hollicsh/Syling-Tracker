-- ========================================================================= --
--                              SylingTracker                                --
--           https://www.curseforge.com/wow/addons/sylingtracker             --
--                                                                           --
--                               Repository:                                 --
--                   https://github.com/Skamer/SylingTracker                 --
--                                                                           --
-- ========================================================================= --
Syling                "SylingTracker.Quests.QuestsContentView"               ""
-- ========================================================================= --
namespace                          "SLT"
-- ========================================================================= --
-- Iterator helper for ignoring the children are used for backdrop, and avoiding
-- they are taken as account for their parent height
IterateFrameChildren = Utils.IterateFrameChildren

__Recyclable__ "SylingTracker_QuestsContentView%d"
class "QuestsContentView" (function(_ENV)
  inherit "ContentView"

  function OnViewUpdate(self, data)
    if data.quests then 
      local quests = self:AcquireQuestsList()
      quests:UpdateView(data.quests)
    else 
      self:ReleaseQuestsList()
    end
  end

  -- function OnAdjustHeight(self, useAnimation)
  --   local maxOuterBottom
  --   for childName, child in IterateFrameChildren(self) do
  --     local outerBottom = child:GetBottom()
  --     if outerBottom then 
  --       if not maxOuterBottom or maxOuterBottom > outerBottom then 
  --         maxOuterBottom = outerBottom
  --       end 
  --     end 
  --   end
    
  --   if maxOuterBottom then 
  --     local computeHeight = self:GetTop() - maxOuterBottom + self.PaddingBottom
  --     if useAnimation then 
  --       self:SetAnimatedHeight(computeHeight)
  --     else 
  --       self:SetHeight(computeHeight)
  --     end
  --   end
  -- end

  function AcquireQuestsList(self)
    local content = self:GetChild("Content")
    local quests = content:GetChild("Quests")
    if not quests then 
      quests = QuestListView.Acquire()

      -- We need to keep the old name when we'll release it
      self.__previousQuestsListName = quests:GetName()

      quests:SetParent(content)
      quests:SetName("Quests")

      -- It's important to only style it once we have set its parent and its new
      -- name 
      if self.Quests then 
        Style[quests] = self.Quests
      end

      -- Register the events
      quests.OnSizeChanged = quests.OnSizeChanged + self.OnChildrenSizeChanged

      self:AdjustHeight(true)
    end
    
    return quests
  end

  function ReleaseQuestsList(self)
    local content = self:GetChild("Content")
    local quests = content:GetChild("Quests")
    if quests then 
      -- Give its old name (generated by the recycle system)
      quests:SetName(self.__previousQuestsListName)

      -- Unregister the events
      quests.OnSizeChanged = quests.OnSizeChanged - self.OnChildrenSizeChanged

      -- It's better to release it after the event has been unregistered for avoiding
      -- useless call
      quests:Release()

      self:AdjustHeight(true)
    end
  end

  function OnRelease(self)
    -- First, release the children 
    self:ReleaseQuestsList()

    -- We call the "Parent" OnRelease (see, ContentView)
    super.OnRelease(self)
  end
  -----------------------------------------------------------------------------
  --                               Properties                                --
  -----------------------------------------------------------------------------
  -- property "PaddingBottom" {
  --   type    = Number,
  --   default = 10
  -- }

  property "Quests" {
    type    = Table
  }
  -----------------------------------------------------------------------------
  --                            Constructors                                 --
  -----------------------------------------------------------------------------
  __Template__{}
  function __ctor(self)
    self.OnChildrenSizeChanged = function() self:AdjustHeight(true) end
  end
end)

Style.UpdateSkin("Default", {
  [QuestsContentView] = {
    Header = {
      IconBadge = {
        backdropColor = { r = 0, g = 0, b = 0, a = 0},
        Icon = {
          atlas = AtlasType("QuestNormal")
        }
      },

      Label = {
        text = "Quests"
      }
    },
    Content = {
      backdropColor = { r = 1, g = 0, b = 0, a = 1},
      location = {
        Anchor("TOP", 0, -5, "Header", "BOTTOM"),
        Anchor("LEFT", 5, 0),
        Anchor("RIGHT", -5, 0)
      }
    },

    Quests = {
        location = {
          Anchor("TOP"),
          Anchor("LEFT"),
          Anchor("RIGHT")
      }
    }
  }
})