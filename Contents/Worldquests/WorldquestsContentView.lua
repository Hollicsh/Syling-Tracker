-- ========================================================================= --
--                              SylingTracker                                --
--           https://www.curseforge.com/wow/addons/sylingtracker             --
--                                                                           --
--                               Repository:                                 --
--                   https://github.com/Skamer/SylingTracker                 --
--                                                                           --
-- ========================================================================= --
Scorpio               "SylingTracker.Worldquests.ContentView"                ""
-- ========================================================================= --
namespace                          "SLT"
-- ========================================================================= --
-- Iterator helper for ignoring the children are used for backdrop, and avoiding
-- they are taken as account for their parent height
IterateFrameChildren = Utils.IterateFrameChildren

ResetStyles = Utils.ResetStyles

__Recyclable__ "SylingTracker_WorldquestsContentView%d"
class "WorldquestsContentView" (function(_ENV)
  inherit "Frame" extend "IView"

  function OnViewUpdate(self, data)
    if data.quests then 
      local worldQuests = self:AcquireWorldQuests()
      worldQuests:UpdateView(data.quests)
    else
      self:ReleaseWorldQuests()
    end
  end

  function OnAdjustHeight(self, useAnimation)
    local height = 0
    local maxOuterBottom 

    for childName, child in self:GetChilds() do 
      local outerBottom = child:GetBottom() 
      if outerBottom then 
        if not maxOuterBottom or maxOuterBottom > outerBottom then 
          maxOuterBottom = outerBottom
        end 
      end 
    end
    
    if maxOuterBottom then 
      local computeHeight = self:GetTop() - maxOuterBottom + self.PaddingBottom
      if useAnimation then 
        self:SetAnimatedHeight(computeHeight)
      else 
        self:SetHeight(computeHeight)
      end
    end
  end

  function AcquireWorldQuests(self)
    local worldQuests = self:GetChild("WorldQuests")
    if not worldQuests then 
      worldQuests = WorldQuestListView.Acquire()

      -- We need to keep the old name when we'll release it
      self.__previousWorldQuestsName = worldQuests:GetName()

      worldQuests:SetParent(self)
      worldQuests:SetName("WorldQuests")

      -- It's important to only style it once we have set its parent and its new
      -- name
      if self.WorldQuests then 
        Style[worldQuests] = self.WorldQuests
      end

      -- Register the events 
      worldQuests.OnSizeChanged = worldQuests.OnSizeChanged + self.OnWorldQuestsSizeChanged

      self:AdjustHeight(true)
    end

    return worldQuests
  end

  function ReleaseWorldQuests(self)
    local worldQuests = self:GetChild("WorldQuests")
    if worldQuests then 
      -- Give its old name (generated by the recycle system)
      worldQuests:SetName(self.__previousWorldQuestsName)
      self.__previousWorldQuestsName = nil 

      -- Unregister the events
      worldQuests.OnSizeChanged = worldQuests.OnSizeChanged - self.OnWorldQuestsSizeChanged

      -- It's better to release it after the event has been unregistered for avoiding
      -- useless call
      worldQuests:Release()

      self:AdjustHeight()
    end
  end

  function OnRelease(self)
    self:ReleaseWorldQuests()

    self:ClearAllPoints()
    self:SetParent()
    self:Hide()
    self:CancelAdjustHeight()
    self:CancelAnimatingHeight()

    self:SetHeight(1)

    ResetStyles(self)
  end

  function OnAcquire(self)
    -- Important ! We need the frame is instantly styled as this may affect 
    -- its height.
    self:InstantApplyStyle()

    self:Show()
    self:AdjustHeight(true)
  end
  -----------------------------------------------------------------------------
  --                               Properties                                --
  -----------------------------------------------------------------------------
  property "PaddingBottom" {
    type    = Number,
    default = 10
  }

  property "WorldQuests" {
    type    = Table
  }
  -----------------------------------------------------------------------------
  --                            Constructors                                 --
  -----------------------------------------------------------------------------
  __Template__ {
    Header = ContentHeader
  }
  function __ctor(self)
    -- Important! As the frame ajusts its height depending of its children height
    -- we need to set its height when contructed for the event "OnSizechanged" of
    -- its children is triggered.
    self:SetHeight(1) -- !important

    self:SetClipsChildren(true)

    self.OnWorldQuestsSizeChanged = function() self:AdjustHeight(true) end
  end
end)

Style.UpdateSkin("Default", {
  [WorldquestsContentView] = {
    Header = {
      location = {
        Anchor("TOPLEFT"),
        Anchor("TOPRIGHT")
      },
      IconBadge = {
        backdrop = { r = 0, g = 0, b = 0, a = 0},
        Icon = {
          atlas = AtlasType("QuestDaily")
        }
      },

      Label = {
        text = "World Quests"
      }
    },

    WorldQuests = {
      location = {
        Anchor("TOP", 0, -5, "Header", "BOTTOM"),
        Anchor("LEFT", 4, 0),
        Anchor("RIGHT", -4, 0)
      }
    }
  }
})